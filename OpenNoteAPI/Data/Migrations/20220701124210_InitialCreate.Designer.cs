// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OpenNoteAPI.Data;

#nullable disable

namespace OpenNoteAPI.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220701124210_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("OpenNoteAPI.Data.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Lorem ipsum dolor sit amet.",
                            CreatedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9179),
                            ModifiedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9189),
                            Title = "Sample Note 1"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Doloribus ea impedit magnam.",
                            CreatedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9191),
                            ModifiedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9192),
                            Title = "Sample Note 2"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Error, quis laborum.",
                            CreatedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9193),
                            ModifiedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9193),
                            Title = "Sample Note 3"
                        },
                        new
                        {
                            Id = 4,
                            Content = "Error doloribus saepe animi natus.",
                            CreatedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9194),
                            ModifiedTime = new DateTime(2022, 7, 1, 15, 42, 10, 624, DateTimeKind.Local).AddTicks(9194),
                            Title = "Sample Note 4"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
